import telebot
from telebot import types
import mysql.connector
from telebot.types import InputMediaPhoto, ReplyKeyboardRemove
import os
from dotenv import load_dotenv
import re

dotenv_path = os.path.join(os.path.dirname(__file__), '.env')
if os.path.exists(dotenv_path):
    load_dotenv(dotenv_path)

API_KEY = os.environ.get('API_KEY')
DB_PASS = os.environ.get('DB_PASS')
ADMN_PASS = os.environ.get('ADMN_PASS')

bot = telebot.TeleBot(API_KEY)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–¥
db = mysql.connector.connect(
    host="localhost",
    user="root",
    password=DB_PASS,
    database="flowers",
)
cursor = db.cursor()


class User:
    def __init__(self, Id, first, username):
        self.Id = Id
        self.first = first
        self.username = username


class Flower:
    def __init__(self, Id, name, amount, price):
        self.Id = Id
        self.name = name
        self.amount = amount
        self.price = price

    def amountPlus(self):
        self.amount += 1
        return self.amount

    def amountMinus(self):
        self.amount -= 1
        return self.amount

    def display(self):
        print(
            f'Id = {self.Id}, name = {self.name}, amount = {self.amount}, price = {self.price}')


# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ø–∏—Å–∫–∞ —Ü–≤–µ—Ç–æ–≤ –∏–∑ –≤—ã–±—Ä–∞–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
flowerDictData = {}

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ø–∏—Å–∫–∞ —Ü–≤–µ—Ç–æ–≤
flowerList = []


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ /start
@bot.message_handler(commands=['start'])
def start_message(message):
    cid = message.chat.id

    user = User(Id=cid, first=message.from_user.first_name, username=message.from_user.username)

    request = f'INSERT INTO customers(name, user_name, chat_id) SELECT * FROM(SELECT \'{user.first}\', \'{user.username}\', \'{user.Id}\') AS tmp WHERE NOT EXISTS(SELECT chat_id FROM customers WHERE chat_id=\'{user.Id}\') LIMIT 1'

    try:
        cursor.execute(request)
        db.commit()
    except:
        db.rollback()

    keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
    keyboard.add(*[types.KeyboardButton(text=name)
                   for name in ['–ú–µ–Ω—éüìã', '–ö–æ—Ä–∑–∏–Ω–∞üõçÔ∏è']])
    # keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
    # keyboard.add(*[types.KeyboardButton(text=name)
    #                for name in ['–ñ–∏–≤—ã–µ —Ü–≤–µ—Ç—ã', '–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–µ']])
    bot.send_message(
        cid, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.first}\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Ü–≤–µ—Ç–æ—á–Ω—ã–π –º–∞–≥–∞–∑–∏–Ωüíê', reply_markup=keyboard)


def mainMenu(message):
    cid = message.chat.id

    cursor.execute('SELECT COUNT(*) FROM category')
    N = cursor.fetchone()
    N = int(str(N)[1:-2])

    cursor.execute('SELECT name FROM category')

    flowerList = []
    for i in range(N):
        flowerList.append(str(cursor.fetchone())[2:-3])

    keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
    keyboard.add(*[types.KeyboardButton(text=name)
                   for name in flowerList])
    keyboard.add('‚óÄÔ∏è–ù–∞–∑–∞–¥', '–ö–æ—Ä–∑–∏–Ω–∞üõçÔ∏è')

    msg = bot.send_message(cid, '–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ', reply_markup=keyboard)
    bot.register_next_step_handler(msg, selectCategory)


def selectCategory(message):
    cid = message.chat.id

    if message.text == '‚óÄÔ∏è–ù–∞–∑–∞–¥':
        start_message(message)

    elif message.text == '–ö–æ—Ä–∑–∏–Ω–∞üõçÔ∏è':
        cart(message)

    elif message.text == '/start':
        bot.clear_step_handler_by_chat_id(cid)
        start_message(message)

    elif message.text == '/admin':
        bot.clear_step_handler_by_chat_id(cid)
        admin_message(message)

    elif message.text == '/help':
        bot.clear_step_handler_by_chat_id(cid)
        help_message(message)

    else:
        cursor.execute(
            f'SELECT id FROM category WHERE name=\'{message.text}\'')
        categoryId = cursor.fetchone()
        categoryId = int(str(categoryId)[1:-2])
        print('categoryId = ' + str(categoryId))

        cursor.execute(
            f'SELECT COUNT(*) FROM goods WHERE category=\'{categoryId}\'')
        N = cursor.fetchone()
        N = int(str(N)[1:-2])
        print('N = ' + str(N))

        if N != 0:
            cursor.execute(
                f'SELECT id FROM goods WHERE category=\'{categoryId}\'')
            flowerId = []
            for i in range(N):
                flowerId.append(str(cursor.fetchone())[1:-2])

            for i in flowerId:
                keyboard = types.InlineKeyboardMarkup()
                keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name + ':' + str(i))  # –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ —Ç—É—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞
                               for name in ['‚òùÔ∏è–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—Éüëà']])

                cursor.execute(f'SELECT name FROM goods WHERE id=\'{i}\'')
                name = cursor.fetchone()
                name = str(name)[2:-3]

                cursor.execute(f'SELECT price FROM goods WHERE id=\'{i}\'')
                price = cursor.fetchone()
                price = str(price)[1:-2]

                cursor.execute(f'SELECT amount FROM goods WHERE id=\'{i}\'')
                amount = cursor.fetchone()
                amount = str(amount)[1:-2]

                msg = bot.send_photo(
                    cid, open(f'images/{i}.jpg', 'rb'), caption=name +
                    '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' +
                    '–í –Ω–∞–ª–∏—á–∏–µ - ' + amount + ' —à—Ç' +
                    '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' +
                    '1Ô∏è‚É£ —à—Ç - ' + price + ' –≥—Ä–Ωüí∏', reply_markup=keyboard)

            bot.register_next_step_handler(msg, selectCategory)

        else:
            msg = bot.send_message(cid, '–°–µ–π—á–∞—Å –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏ :(')
            bot.register_next_step_handler(msg, selectCategory)


# –ö–æ—Ä–∑–∏–Ω–∞
def cart(message):
    cid = message.chat.id

    keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
    keyboard.add(*[types.KeyboardButton(text=name)
                   for name in ['–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑üì¶', '–ú–µ–Ω—éüìã']])
    bot.send_message(cid, 'Cart', reply_markup=keyboard)


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ /admin
@ bot.message_handler(commands=['admin'])
def admin_message(message):
    cid = message.chat.id

    msg = bot.send_message(cid, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ')
    bot.register_next_step_handler(msg, confirmPassword)


def confirmPassword(message):
    cid = message.chat.id

    if message.text == ADMN_PASS:

        keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
        keyboard.add(*[types.KeyboardButton(text=admbutton)
                       for admbutton in ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', '–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á—ë—Ç']])
        keyboard.add('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏')

        msg = bot.send_message(
            cid, '–†–µ–∫–æ–º–µ–Ω–¥—É—é —É–¥–∞–ª–∏—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º. –ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminArea)

    elif message.text == '/start':
        bot.clear_step_handler_by_chat_id(cid)
        start_message(message)
    else:
        bot.send_message(cid, '–ü–∞—Ä–æ–ª—å –Ω–µ –≤–µ—Ä–Ω—ã–π :(')


# –§—É–Ω–∫—Ü–∏–∏ –∞–¥–º–∏–Ω–∞
def adminArea(message):
    cid = message.chat.id
    global flowerList
    flowerList = []

    if message.text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä':

        cursor.execute('SELECT COUNT(*) FROM category')
        N = cursor.fetchone()
        N = int(str(N)[1:-2])

        cursor.execute('SELECT name FROM category ORDER BY name')
        for i in range(N):
            flowerList.append(str(cursor.fetchone())[2:-3])

        keyboard = types.ReplyKeyboardMarkup(1, row_width=1, selective=0)
        keyboard.add(*[types.KeyboardButton(text=name)
                       for name in flowerList])
        keyboard.add('–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')
        print('flowerList = ' + str(flowerList))

        msg = bot.send_message(cid, '–í—ã–±–µ—Ä–µ—Ç–µ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ',
                               reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminSelectCategoryForEdit)

    elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é':

        keyboard = types.ReplyKeyboardMarkup(1, 1)
        keyboard.add(*[types.KeyboardButton(text=name)
                       for name in ['–û—Ç–º–µ–Ω–∏—Ç—å‚ùå']])

        cursor.execute('SELECT COUNT(*) FROM category')
        N = cursor.fetchone()
        N = int(str(N)[1:-2])

        cursor.execute('SELECT name FROM category')
        flowerStr = ''
        for i in range(N):
            flowerStr += str(cursor.fetchone())[2:-3] + '\n'

        bot.send_message(cid, '–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ' +
                         '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' + flowerStr)

        msg = bot.send_message(
            cid, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminAddCategory)

    elif message.text == '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä':

        cursor.execute('SELECT COUNT(*) FROM category')
        N = cursor.fetchone()
        N = int(str(N)[1:-2])

        cursor.execute('SELECT name FROM category ORDER BY name')
        flowerList = []
        for i in range(N):
            flowerList.append(str(cursor.fetchone())[2:-3])

        keyboard = types.ReplyKeyboardMarkup(1, row_width=1, selective=0)
        keyboard.add(*[types.KeyboardButton(text=name)
                       for name in flowerList])
        keyboard.add('–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')

        msg = bot.send_message(cid, '–í—ã–±–µ—Ä–µ—Ç–µ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:',
                               reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminSelectCategory)

    elif message.text == '–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á—ë—Ç':
        msg = bot.send_message(cid, '–æ—Ç—á—ë—Ç')
        bot.register_next_step_handler(msg, adminArea)

    elif message.text == '–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏':
        bot.send_message(cid, '–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏' +
                         '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' +
                         '‚óæÔ∏è/start - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è', reply_markup=ReplyKeyboardRemove())

    elif message.text == '/start':
        bot.clear_step_handler_by_chat_id(cid)
        start_message(message)
    else:
        bot.send_message(cid, '–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç')


# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
def adminSelectCategoryForEdit(message):
    cid = message.chat.id

    if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':

        global flowerDictData
        category = message.text

        try:
            cursor.execute(
                f'SELECT id FROM category WHERE name=\'{category}\'')
            categoryId = int(str(cursor.fetchone())[1:-2])
            print('categoryId = ' + str(categoryId))

            cursor.execute(
                f'SELECT COUNT(*) FROM goods WHERE category=\'{categoryId}\'')
            N = cursor.fetchone()
            N = int(str(N)[1:-2])
            print('N = ' + str(N))

        except:
            msg = bot.send_message(
                cid, '–°–µ–π—á–∞—Å –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏ :(\n–í—ã–±–µ—Ä–µ—Ç–µ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ')
            bot.register_next_step_handler(msg, adminSelectCategoryForEdit)

        if N != 0:
            cursor.execute(
                f'SELECT id, name, price, amount FROM goods WHERE category=\'{categoryId}\' ORDER BY name')
            flowerDictData = {}
            for i in range(N):
                flowerDictData.update({i: cursor.fetchone()})

                flowerId = str(flowerDictData[i][0])
                name = str(flowerDictData[i][1])
                amount = str(flowerDictData[i][2])
                price = str(flowerDictData[i][3])

                keyboard = types.InlineKeyboardMarkup(row_width=2)
                keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name + ':' + flowerId)
                               for name in ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω—É', '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ', '–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä']])

                bot.send_message(cid, name +
                                 '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' +
                                 '–í –Ω–∞–ª–∏—á–∏–µ - ' + price + ' —à—Ç' +
                                 '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' +
                                 '1Ô∏è‚É£ —à—Ç - ' + amount + ' –≥—Ä–Ωüí∏', reply_markup=keyboard)

            flowerDictData = flowerDictData.copy()
            print('GLOBAL flowerDictData = ' + str(flowerDictData))

            msg = bot.send_message(cid, '–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:')
            bot.register_next_step_handler(msg, adminSelectCategoryForEdit)

        else:
            msg = bot.send_message(
                cid, '–°–µ–π—á–∞—Å –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏ :(\n–í—ã–±–µ—Ä–µ—Ç–µ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ')
            bot.register_next_step_handler(msg, adminSelectCategoryForEdit)

    else:
        keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
        keyboard.add(*[types.KeyboardButton(text=admbutton)
                       for admbutton in ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', '–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á—ë—Ç']])
        keyboard.add('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏')

        msg = bot.send_message(cid, '–û–∫–µ–π', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminArea)


# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
def adminEditPrice(message, flowerId):
    cid = message.chat.id
    print(message.text)

    keyboard = types.ReplyKeyboardMarkup(1, row_width=1, selective=0)
    keyboard.add(*[types.KeyboardButton(text=name)
                   for name in flowerList])
    keyboard.add('–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')

    if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
        if message.text.isdigit():
            try:
                cursor.execute(
                    f'UPDATE goods SET price = \'{message.text}\' WHERE id = \'{flowerId}\'')
                db.commit()
            except:
                db.rollback()
        else:
            msg = bot.send_message(cid, '–≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
            bot.register_next_step_handler(msg, adminEditPrice, flowerId)

        bot.send_message(cid, f'–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω–µ—Å–µ–Ω—ã ({message.text})')
        msg = bot.send_message(
            cid, '–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminSelectCategoryForEdit)

    else:
        bot.send_message(cid, '–û–∫–µ–π')
        msg = bot.send_message(
            cid, '–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminSelectCategoryForEdit)


# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
def adminEditAmount(message, flowerId):
    cid = message.chat.id
    print(message.text)

    keyboard = types.ReplyKeyboardMarkup(1, row_width=1, selective=0)
    keyboard.add(*[types.KeyboardButton(text=name)
                   for name in flowerList])
    keyboard.add('–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')

    if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
        if message.text.isdigit():
            try:
                cursor.execute(
                    f'UPDATE goods SET amount = \'{message.text}\' WHERE id = \'{flowerId}\'')
                db.commit()
            except:
                db.rollback()
        else:
            msg = bot.send_message(cid, '–≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
            bot.register_next_step_handler(msg, adminEditPrice, flowerId)

        bot.send_message(cid, f'–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω–µ—Å–µ–Ω—ã ({message.text})')
        msg = bot.send_message(
            cid, '–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminSelectCategoryForEdit)

    else:
        bot.send_message(cid, '–û–∫–µ–π')
        msg = bot.send_message(
            cid, '–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminSelectCategoryForEdit)


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
def adminAddCategory(message):
    cid = message.chat.id

    if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
        category = message.text
        request = f'INSERT INTO category(name) SELECT * FROM(SELECT \'{category}\') AS tmp WHERE NOT EXISTS(SELECT name FROM category WHERE name = \'{category}\') LIMIT 1'

        try:
            cursor.execute(request)
            db.commit()
        except:
            db.rollback()

        keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
        keyboard.add(*[types.KeyboardButton(text=admbutton)
                       for admbutton in ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', '–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á—ë—Ç']])
        keyboard.add('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏')

        msg = bot.send_message(
            cid, '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminArea)

    else:
        keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
        keyboard.add(*[types.KeyboardButton(text=admbutton)
                       for admbutton in ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', '–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á—ë—Ç']])
        keyboard.add('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏')
        msg = bot.send_message(cid, '–û–∫–µ–π', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminArea)


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
def adminSelectCategory(message):
    cid = message.chat.id

    if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
        category = message.text

        cursor.execute(f'SELECT id FROM category WHERE name=\'{category}\'')
        categoryId = int(str(cursor.fetchone())[1:-2])
        print(categoryId)

        keyboard = types.ReplyKeyboardMarkup(1, 1)
        keyboard.add('–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')

        msg = bot.send_message(
            cid, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞: ', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminAddPosition, categoryId)

    else:
        keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
        keyboard.add(*[types.KeyboardButton(text=admbutton)
                       for admbutton in ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', '–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á—ë—Ç']])
        keyboard.add('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏')
        msg = bot.send_message(cid, '–û–∫–µ–π', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminArea)


def adminAddPosition(message, categoryId):
    cid = message.chat.id

    if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
        # categoryId = categoryId
        newFlower = message.text

        try:
            cursor.execute(
                f'INSERT INTO goods (category, name) VALUES (\'{categoryId}\', \'{newFlower}\')')
            db.commit()
        except:
            db.rollback()

        msg = bot.send_message(cid, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞: ')
        bot.register_next_step_handler(msg, adminAddAmount, newFlower)

    else:
        keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
        keyboard.add(*[types.KeyboardButton(text=admbutton)
                       for admbutton in ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', '–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á—ë—Ç']])
        keyboard.add('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏')
        msg = bot.send_message(cid, '–û–∫–µ–π', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminArea)


def adminAddAmount(message, newFlower):
    cid = message.chat.id

    if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
        newFlower = newFlower
        amount = message.text

        request = f'UPDATE goods SET amount = \'{amount}\'WHERE name = \'{newFlower}\''

        try:
            cursor.execute(request)
            db.commit()
        except:
            db.rollback()

        msg = bot.send_message(cid, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ü–≤–µ—Ç–∫–∞: ')
        bot.register_next_step_handler(msg, adminAddPosPrice, newFlower)
    else:
        keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
        keyboard.add(*[types.KeyboardButton(text=admbutton)
                       for admbutton in ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', '–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á—ë—Ç']])
        keyboard.add('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏')
        msg = bot.send_message(cid, '–û–∫–µ–π', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminArea)


def adminAddPosPrice(message, newFlower):
    cid = message.chat.id

    if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
        newFlower = newFlower
        newFlowerPrice = message.text

        request = f'UPDATE goods SET price = \'{newFlowerPrice}\'WHERE name = \'{newFlower}\''

        try:
            cursor.execute(request)
            db.commit()
        except:
            db.rollback()

        msg = bot.send_message(cid, '–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ: ')
        bot.register_next_step_handler(msg, adminAddPhoto, newFlower)

    else:
        keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
        keyboard.add(*[types.KeyboardButton(text=admbutton)
                       for admbutton in ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', '–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á—ë—Ç']])
        keyboard.add('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏')
        msg = bot.send_message(cid, '–û–∫–µ–π', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminArea)


def adminAddPhoto(message, newFlower):
    cid = message.chat.id

    try:
        if message.text != '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
            newFlower = newFlower

            cursor.execute(f'SELECT id FROM goods WHERE name=\'{newFlower}\'')
            flowerID = cursor.fetchone()
            flowerID = int(str(flowerID)[1:-2])
            print(flowerID)

            fileInfo = bot.get_file(message.document.file_id)
            print(fileInfo)
            downloadedFile = bot.download_file(fileInfo.file_path)

            src = 'images/' + str(flowerID) + '.jpg'
            with open(src, 'wb') as new_file:
                new_file.write(downloadedFile)

            keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
            keyboard.add(*[types.KeyboardButton(text=admbutton)
                           for admbutton in ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', '–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á—ë—Ç']])
            keyboard.add('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏')

            msg = bot.send_message(
                cid, '–ü–æ–∑–∏—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞', reply_markup=keyboard)
            bot.register_next_step_handler(msg, adminArea)

        else:
            keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
            keyboard.add(*[types.KeyboardButton(text=admbutton)
                           for admbutton in ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä', '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', '–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á—ë—Ç']])
            keyboard.add('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏')

            msg = bot.send_message(cid, '–û–∫–µ–π', reply_markup=keyboard)
            bot.register_next_step_handler(msg, adminArea)

    except Exception as e:
        print(e)
        msg = bot.reply_to(
            message, '–ù–µ —Å–∂–∏–º–∞–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(msg, adminAddPhoto, newFlower)


# –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
def adminConfirmDel(message, flowerId):
    cid = message.chat.id

    if message.text == '–î–∞':

        os.remove(f'images/{flowerId}.jpg')

        request = f'DELETE FROM goods WHERE id = \'{flowerId}\''

        try:
            cursor.execute(request)
            db.commit()
        except:
            db.rollback()

        keyboard = types.ReplyKeyboardMarkup(1, row_width=1, selective=0)
        keyboard.add(*[types.KeyboardButton(text=name)
                       for name in flowerList])
        keyboard.add('–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')

        msg = bot.send_message(cid, '–ü–æ–∑–∏—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞')
        msg = bot.send_message(
            cid, '–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminSelectCategoryForEdit)

    else:
        keyboard = types.ReplyKeyboardMarkup(1, row_width=1, selective=0)
        keyboard.add(*[types.KeyboardButton(text=name)
                       for name in flowerList])
        keyboard.add('–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')

        bot.send_message(cid, '–û–∫–µ–π', reply_markup=keyboard)
        msg = bot.send_message(cid, '–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:')
        bot.register_next_step_handler(msg, adminSelectCategoryForEdit)


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ /help
@ bot.message_handler(commands=['help'])
def help_message(message):
    cid = message.chat.id
    bot.send_message(cid, '–ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ø–æ–ª–æ–º–∫—É, –ø–∏—à–∏—Ç–µ –µ–º—É - @parubanok')


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ —Ç–µ–∫—Å—Ç
@ bot.message_handler(content_types=['text'])
def send_text(message):
    cid = message.chat.id

    if message.text == '–ú–µ–Ω—éüìã':
        mainMenu(message)

    elif message.text == '–ö–æ—Ä–∑–∏–Ω–∞üõçÔ∏è':
        bot.send_message(cid, '–ö–æ—Ä–∑–∏–Ω–∞üõçÔ∏è')

    else:
        bot.send_message(cid, '–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç')


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∏–Ω–ª–∞–π–Ω–æ–≤—ã–µ –∫–Ω–æ–∫–ø–∏ –º–µ–Ω—é
@ bot.callback_query_handler(func=lambda call: True)
def send_answer(call):
    print('\n' + call.data)

    cid = call.message.chat.id
    mid = call.message.message_id

    flowerId = call.data.split(':')[1]
    cursor.execute(
        f'SELECT name, price FROM goods WHERE id=\'{flowerId}\'')
    flower = cursor.fetchone()
    f = Flower(flowerId, name=flower[0],
               amount=1, price=flower[1])
    f.display()

    if re.match(r'‚òùÔ∏è–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—Éüëà', call.data):
        bot.answer_callback_query(
            callback_query_id=call.id, text="–î–æ–±–∞–≤–ª–µ–Ω–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É", show_alert=False)
        
        try:
            cursor.execute(
                f'INSERT INTO basket (id_cust, id_goods, amount, price) VALUES (\'{}\', \'{newFlower}\', \'{newFlower}\', \'{newFlower}\')')
            db.commit()
        except:
            db.rollback()

        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name + ':' + str(f.Id))
                       for name in ['-', f'{f.amount} —à—Ç.', '+', '‚ùå', '–ö–æ—Ä–∑–∏–Ω–∞üõçÔ∏è']])
        bot.edit_message_reply_markup(cid, mid, reply_markup=keyboard)

    elif re.match(r'‚ùå', call.data):

        bot.answer_callback_query(
            callback_query_id=call.id, text="–£–¥–∞–ª–µ–Ω–Ω–æ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", show_alert=False)

        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name + ':' + str(f.Id))
                       for name in ['‚òùÔ∏è–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—Éüëà']])
        bot.edit_message_reply_markup(cid, mid, reply_markup=keyboard)

    elif re.match(r'\+', call.data):

        f.amountPlus()

        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name + ':' + str(f.Id))
                       for name in ['-', f'{f.amount} —à—Ç.', '+', '‚ùå', '–ö–æ—Ä–∑–∏–Ω–∞üõçÔ∏è']])
        bot.edit_message_reply_markup(cid, mid, reply_markup=keyboard)

        print('amount = ' + str(f.amount))

    elif re.match(r'-', call.data):

        if f.amount > 1:
            f.amountMinus()

            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name + ':' + str(f.Id))
                           for name in ['-', f'{f.amount} —à—Ç.', '+', '‚ùå', '–ö–æ—Ä–∑–∏–Ω–∞üõçÔ∏è']])
            bot.edit_message_reply_markup(cid, mid, reply_markup=keyboard)

            print('amount = ' + str(f.amount))

    elif re.match(r'–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω—É', call.data):
        bot.clear_step_handler_by_chat_id(cid)

        flowerId = call.data.split(':')[1]
        print('flowerId = ' + str(flowerId))

        keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
        keyboard.add('–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')

        msg = bot.send_message(
            cid, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É: ',  reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminEditPrice, flowerId)

    elif re.match(r'–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ', call.data):
        bot.clear_step_handler_by_chat_id(cid)

        flowerId = call.data.split(':')[1]
        print('flowerId = ' + str(flowerId))

        keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
        keyboard.add('–û—Ç–º–µ–Ω–∏—Ç—å‚ùå')

        msg = bot.send_message(
            cid, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminEditAmount, flowerId)

    elif re.match(r'–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä', call.data):
        bot.clear_step_handler_by_chat_id(cid)

        flowerId = call.data.split(':')[1]
        print('flowerId = ' + str(flowerId))

        keyboard = types.ReplyKeyboardMarkup(1, row_width=2, selective=0)
        keyboard.add(*[types.KeyboardButton(text=admbutton)
                       for admbutton in ['–î–∞', '–ù–µ—Ç']])
        msg = bot.send_message(
            cid, '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏ —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?', reply_markup=keyboard)
        bot.register_next_step_handler(msg, adminConfirmDel, flowerId)

#################################################################################
    if call.data == '–í—ã–ø–æ–ª–Ω–µ–Ω–æ':

        bot.send_message(cid, '–í–∞—à –±—É–∫–µ—Ç –≥–æ—Ç–æ–≤‚ò∫Ô∏èüëç' +
                         '\n–ó–∞–±–µ—Ä–∏—Ç–µ –µ–≥–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤ –±–ª–∏–∂–∞–π—â–µ–µ –≤—Ä–µ–º—è‚åöÔ∏è' +
                         '\nüòã–•–æ—Ä–æ—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫üòã')


def buyFlower(message, price, name):
    cid = message.chat.id

    name = name
    count = message.text
    print(count)

    if count != '0':
        if count.isdigit():

            fPrice = price*int(count)

            keyboard = types.ReplyKeyboardMarkup(1, 1)
            keyboard.add(*[types.KeyboardButton(text=name)
                           for name in ['–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑']])

            msg = bot.send_message(cid, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ : ' + str(count) + ' —à—Ç'
                                   '\n–ö –æ–ø–ª–∞—Ç–µ : ' + str(fPrice) + ' –≥—Ä–Ωüí∏' +
                                   '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' +
                                   '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑: ', reply_markup=keyboard)
            bot.register_next_step_handler(
                msg, confirmOrder, count, name, fPrice)

        elif count == '/start':
            bot.clear_step_handler_by_chat_id(cid)
            start_message(message)
        else:
            msg = bot.send_message(cid, '–≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞üòï')
            bot.register_next_step_handler(msg, buyFlower, price)
    else:
        msg = bot.send_message(cid, '–≠—Ç–æ –Ω–æ–ª—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞üòï')
        bot.register_next_step_handler(msg, buyFlower, price)


def confirmOrder(message, count, name, fPrice):
    cid = message.chat.id

    name = name
    count = count
    fPrice = fPrice
    answ = message.text
    print(answ)

    if answ == '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
        bot.send_message(cid, 'üòâ–í–∞—à –±—É–∫–µ—Ç –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ –ø–∞—Ä—ã –º–∏–Ω—É—Ç‚è≥' +
                         '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' +
                         '‚óæÔ∏è/start - —Å–æ–≤–µ—Ä—à–∏—Ç—å –µ—â—ë –ø–æ–∫—É–ø–∫—É', reply_markup=ReplyKeyboardRemove())

        # –°–ú–° –∞–¥–º–∏–Ω—É –ø—Ä–æ –∑–∞–∫–∞–∑
        # keyboard = types.InlineKeyboardMarkup()
        # keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name)
        #                for name in ['–í—ã–ø–æ–ª–Ω–µ–Ω–æ']])
        bot.send_message('461861635', '–ó–∞–∫–∞–∑–∞–ª–∏ –±—É–∫–µ—Ç - ' + name +
                         '\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ - ' + count + ' —à—Ç' +
                         '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ' +
                         '\n–ö –æ–ø–ª–∞—Ç–µ - ' + str(fPrice) + ' –≥—Ä–Ωüí∏')

    elif answ == '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑':
        bot.send_message(cid, 'üì¶–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω!üöÆ' +
                         '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' +
                         '‚óæÔ∏è/start - –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=ReplyKeyboardRemove())
    else:
        msg = bot.send_message(cid, '–¢–∞–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–Ω–µ–ª—åüòï')
        bot.register_next_step_handler(msg, confirmOrder)


bot.infinity_polling(True)
