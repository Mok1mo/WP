import telebot
from telebot import types
import mysql.connector
from telebot.types import ReplyKeyboardRemove

bot = telebot.TeleBot('1505203267:AAGNOvojdLur7H7-Lowxtjg5aSoWtLfg92E')

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–¥
db = mysql.connector.connect(
    host="localhost",
    user="root",
    password="789456",
    database="flowers",
)
cursor = db.cursor()


class User:
    def __init__(self, Id, first, last, username, message):
        self.Id = Id
        self.first = first
        self.last = last
        self.username = username

    def getId(self):
        return self.Id


# –°–±–æ—Ä –∏–Ω—Ñ—ã
        # body = '{message}\n' \
        #    '--\n' \
        #    '{first}, {last}\n' \
        #    '{username}, {id}'.format(message=message.text, first=message.from_user.first_name,
        #                              last=message.from_user.last_name, username=message.from_user.username,
        #                              id=message.chat.id)

# –†–µ–∞–∫—Ü–∏—è –Ω–∞ /start


@bot.message_handler(commands=['start'])
def start_message(message):
    cid = message.chat.id

    user = User(cid, message.from_user.first_name,
                message.from_user.last_name, message.from_user.username, message)
    print(user.Id)

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name)
                   for name in ['–†–æ–∑–∞üåπ', '–•—Ä–∏–∑–∞–Ω—Ç–µ–º–∞üå∏', '–¢—é–ª—å–ø–∞–Ωüå∑']])
    bot.send_message(
        cid, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –∫–∞–∫–∏—Ö —Ü–≤–µ—Ç–æ–≤ –±—É–¥–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å –≤–∞—à –±—É–∫–µ—Çüíê', reply_markup=keyboard)


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ —Ç–µ–∫—Å—Ç
@bot.message_handler(content_types=['text'])
def send_text(message):

    cid = message.chat.id

    bot.send_message(
        cid, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–Ω–µ–ª—å –∫–æ–º–∞–Ω–¥ :)', reply_markup=ReplyKeyboardRemove())

    user = User(cid, message.from_user.first_name,
                message.from_user.last_name, message.from_user.username, message)
    print(user.Id)


@bot.callback_query_handler(func=lambda call: True)
def send_answer(call):
    print(call.data)

    cid = call.message.chat.id
    mid = call.message.message_id

    def get_price(request):

        cursor.execute(request)

        result = cursor.fetchone()
        return int(str(result)[1:-2])

    def func(name):
        price = get_price(
            'SELECT oneprice FROM flower WHERE name IN (\'' + name[:-1] + '\')')
        bot.send_message(cid, '–í—ã–±—Ä–∞–Ω—ã–π —Ç–æ–≤–∞—Ä: ' + call.data +
                         '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n1 ' + name + ' - ' + str(price) + ' –≥—Ä–Ωüí∏' +
                         '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n‚óæÔ∏è/start - –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é')

        # keyboard = types.ReplyKeyboardMarkup(1, 1, row_width=1, selective=0)
        # keyboard.add(*[types.KeyboardButton(text=str(i+1))
        #                for i in range(100)])
        msg = bot.send_message(cid, '–í–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:')
        bot.register_next_step_handler(msg, buyFlower, price, name)

    if call.data == '–í—ã–ø–æ–ª–Ω–µ–Ω–æ':
        # if userId == '461861635':
        bot.send_message(cid, '–í–∞—à –±—É–∫–µ—Ç –≥–æ—Ç–æ–≤‚ò∫Ô∏èüëç' +
                         '\n–ó–∞–±–µ—Ä–∏—Ç–µ –µ–≥–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤ –±–ª–∏–∂–∞–π—â–µ–µ –≤—Ä–µ–º—è‚åöÔ∏è' +
                         '\nüòã–•–æ—Ä–æ—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫üòã')

    elif call.data == '–†–æ–∑–∞üåπ':
        bot.delete_message(cid, mid)
        bot.send_photo(cid, photo=open("images/rose.jpg", 'rb'))
        func(call.data)

    elif call.data == '–•—Ä–∏–∑–∞–Ω—Ç–µ–º–∞üå∏':
        bot.delete_message(cid, mid)
        bot.send_photo(cid, photo=open("images/chrys.jpg", 'rb'))
        func(call.data)

    elif call.data == '–¢—é–ª—å–ø–∞–Ωüå∑':
        bot.delete_message(cid, mid)
        bot.send_photo(cid, photo=open('images/tulip.jpg', 'rb'))
        func(call.data)

    else:
        bot.send_message(cid, '–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç :(')


def buyFlower(message, price, name):
    cid = message.chat.id

    name = name
    count = message.text
    print(count)

    if count != '0':
        if count.isdigit():

            fPrice = price*int(count)

            keyboard = types.ReplyKeyboardMarkup(1, 1)
            keyboard.add(*[types.KeyboardButton(text=name)
                           for name in ['–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑']])

            msg = bot.send_message(cid, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ : ' + str(count) + ' —à—Ç'
                                   '\n–ö –æ–ø–ª–∞—Ç–µ : ' + str(fPrice) + ' –≥—Ä–Ωüí∏' +
                                   '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' +
                                   '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑: ', reply_markup=keyboard)
            bot.register_next_step_handler(
                msg, confirmOrder, count, name, fPrice)

        elif count == '/start':
            bot.clear_step_handler_by_chat_id(cid)
            start_message(message)
        else:
            msg = bot.send_message(cid, '–≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞üòï')
            bot.register_next_step_handler(msg, buyFlower, price)
    else:
        msg = bot.send_message(cid, '–≠—Ç–æ –Ω–æ–ª—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞üòï')
        bot.register_next_step_handler(msg, buyFlower, price)


def confirmOrder(message, count, name, fPrice):
    cid = message.chat.id

    name = name
    count = count
    fPrice = fPrice
    answ = message.text
    print(answ)

    if answ == '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
        bot.send_message(cid, 'üòâ–í–∞—à –±—É–∫–µ—Ç –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ –ø–∞—Ä—ã –º–∏–Ω—É—Ç‚è≥' +
                         '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' +
                         '‚óæÔ∏è/start - —Å–æ–≤–µ—Ä—à–∏—Ç—å –µ—â—ë –ø–æ–∫—É–ø–∫—É', reply_markup=ReplyKeyboardRemove())

        # –°–ú–° –∞–¥–º–∏–Ω—É –ø—Ä–æ –∑–∞–∫–∞–∑
        # keyboard = types.InlineKeyboardMarkup()
        # keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name)
        #                for name in ['–í—ã–ø–æ–ª–Ω–µ–Ω–æ']])
        bot.send_message('461861635', '–ó–∞–∫–∞–∑–∞–ª–∏ –±—É–∫–µ—Ç - ' + name +
                         '\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ - ' + count + ' —à—Ç' +
                         '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ' +
                         '\n–ö –æ–ø–ª–∞—Ç–µ - ' + str(fPrice) + ' –≥—Ä–Ωüí∏')

    elif answ == '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑':
        bot.send_message(cid, 'üì¶–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω!üöÆ' +
                         '\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' +
                         '‚óæÔ∏è/start - –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=ReplyKeyboardRemove())
    else:
        msg = bot.send_message(cid, '–¢–∞–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–Ω–µ–ª—åüòï')
        bot.register_next_step_handler(msg, confirmOrder)


bot.infinity_polling(True)
